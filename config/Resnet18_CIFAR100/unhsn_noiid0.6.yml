clients:
    # Type
    type: simple

    # The total number of clients
    total_clients: 100

    # The number of clients selected in each round
    per_round: 10

    # Should the clients compute test accuracy locally?
    do_test: True

    random_seed: 1234

    comm_simulation: False
    compute_comm_time: true
    

server:
    address: 127.0.0.1
    port: 8120
    # comm_simulation: False
    do_test: True 
    random_seed: 1234

    simulate_wall_time: true

data:
    # The training and testing dataset
    datasource: CIFAR100
    random_seed: 1234
    # Number of samples in each partition
    partition_size: 500

    sampler: noniid
    

    # The concentration parameter for the Dirichlet distribution
    concentration: 0.6

trainer:
    # The type of the trainer
    type: basic

    # The maximum number of training rounds
    rounds: 400

    # The maximum number of clients running concurrently
    max_concurrency: 3

    # The target accuracy
    target_accuracy: 1

    # Number of epoches for local training in each communication round
    epochs: 10
    batch_size: 50
    optimizer: SGD
    lr_scheduler: LambdaLR

    # The machine learning model
    model_name: resnet
    #保留loss的计算图
    # create_graph: True

algorithm:
    # Aggregation algorithm
    type: fedavg

results:
    types: round, accuracy, avg_accuracy, large_accuracy, middle_accuracy, small_accuracy, elapsed_time


parameters:
    optimizer:
        lr: 0.01
        momentum: 0.5
        weight_decay: 0.0001

    learning_rate:
        gamma: 0.1
        milestone_steps: 80ep,120ep
    rates: [0.5,0.71,1]
    Parameters_to_percent_of_clients: [4,3,3]
    importance_filters: [0.5,0.5] #先服务端，后客户端
    hidden_size: [64, 128, 256, 512]
    first_layer: conv1
    ranks_round: 5 #重要性评价间隔
    proxy_data_rate: 0.2
    loss_rate: [1,1]
    hsn_outputs: outputs/nouse_noiid_0.6.txt
    FlexFL_exp: False
    unuse_hsn: True