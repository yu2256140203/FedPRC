clients:
    # Type
    type: simple

    # The total number of clients
    total_clients: 100

    # The number of clients selected in each round
    per_round: 10

    # Should the clients compute test accuracy locally?
    do_test: True

    random_seed: 1234

    comm_simulation: False
    compute_comm_time: true

server:
    address: 127.0.0.1
    port: 8030
    do_test: true
    random_seed: 1234

    simulate_wall_time: true

data:
    # The training and testing dataset
    datasource:  CIFAR10

    # Number of samples in each partition
    partition_size: 500

    sampler: noniid

    # The concentration parameter for the Dirichlet distribution
    concentration: 0.9
    # sampler: iid
    # testset_sampler: iid
##
##    # The random seed for sampling data
    random_seed: 1234

trainer:
    # The type of the trainer
    type: basic

    # The maximum number of training rounds
    rounds: 400

    # The maximum number of clients running concurrently
    max_concurrency: 2

    # The target accuracy
    target_accuracy: 1.

    # Number of epochs for local training in each communication round
    epochs: 10
    batch_size: 50
    loss_criterion: CrossEntropyLoss
    optimizer: SGD
    lr_scheduler: LambdaLR

    model_type: torch_hub
    model_name: resnet34


algorithm:
    # A aggregation algorithm
    type: fedavg
    
results:
    types: round, accuracy, elapsed_time, comm_time, round_time, comm_overhead

parameters:
    model:
        model_rate: 1.0
        track: false
    client_model:
        track: false
    optimizer:
        lr: 0.01
        momentum: 0.5
        weight_decay: 0.0001
    learning_rate:
        gamma: 0.1
        milestone_steps: 80ep,120ep
    limitation:
        activated: False
        #不再允许动态，只放置三种
        min_size: 43
        max_size: 82
        min_flops: 1108
        max_flops: 1108
    rates: [0.5,0.71,1]
    Parameters_to_percent_of_clients: [4,3,3]
    importance_filters: [0.5,0.5] #先服务端，后客户端
    hidden_size: [64, 128, 256, 512]
    first_layer: conv1
    ranks_round: 10 #重要性评价间隔

